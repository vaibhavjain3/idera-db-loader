{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/idera-server/idera-server.component.html","webpack:///./src/app/idera-server/idera-server.component.scss","webpack:///./src/app/idera-server/idera-server.component.ts","webpack:///./src/app/idera-server/idera-server.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IderaServerComponent } from './idera-server/idera-server.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:IderaServerComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1>Idera server</h1>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'webapp';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { IderaServerComponent } from './idera-server/idera-server.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    IderaServerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\r\\n<table align=\\\"center\\\">\\r\\n<tr>\\r\\n  <td>Sql Server :</td>\\r\\n  <td><input [(ngModel)]=\\\"serverName\\\" type=\\\"text\\\" /></td>\\r\\n</tr>\\r\\n\\r\\n<tr>\\r\\n  <td>Sql Login :</td>\\r\\n  <td><input [(ngModel)]=\\\"serverLogin\\\" type=\\\"text\\\"/></td>\\r\\n</tr>\\r\\n<tr>\\r\\n  <td>Sql Password :</td>\\r\\n  <td><input [(ngModel)]=\\\"serverPassword\\\" type=\\\"password\\\"/></td>\\r\\n</tr>\\r\\n<tr>\\r\\n  <td><button (click)=\\\"connect()\\\">Connect</button></td>\\r\\n  <!-- <td><button (click)=\\\"CSVfiles()\\\">CSV Files</button></td> -->\\r\\n</tr>\\r\\n\\r\\n</table><br>\\r\\nConsole:<br>\\r\\n<textarea [(ngModel)]='consoleError'></textarea>\\r\\n<br>\\r\\n<br>\\r\\nServer Details Table:\\r\\n<table align=\\\"center\\\" style=\\\"border:2px solid black\\\">\\r\\n  <tr>\\r\\n    <td>Server Name</td>\\r\\n    <td>Activity</td>\\r\\n    <td>Start/Stop</td>\\r\\n  </tr>\\r\\n  <tr *ngFor=\\\"let data of serverdetails\\\">\\r\\n    <td>{{data.name}}</td>\\r\\n    <td [ngStyle]=\\\"{'background-color':data.activity?'green':'red'}\\\"></td>\\r\\n    <td>\\r\\n      <button *ngIf=\\\"data.activity\\\" (click)=\\\"changeStatus(data.id)\\\">Stop</button>\\r\\n      <button *ngIf=\\\"!data.activity\\\" (click)=\\\"changeStatus(data.id)\\\">Start</button>\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n<button (click)=\\\"startAll()\\\">Start All</button>\\r\\n<button (click)=\\\"stopAll()\\\">Stop All</button>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2lkZXJhLXNlcnZlci9pZGVyYS1zZXJ2ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { IderaServerService } from './idera-server.service';\r\n\r\n@Component({\r\n  selector: 'app-idera-server',\r\n  templateUrl: './idera-server.component.html',\r\n  styleUrls: ['./idera-server.component.scss']\r\n})\r\nexport class IderaServerComponent implements OnInit {\r\n\r\n  constructor(private ideraService: IderaServerService) { }\r\n  serverName;\r\n  serverLogin;\r\n  serverPassword;\r\n  consoleError;\r\n\r\n  savedServerdetails = [{ 'id': 4, 'name': \"Jasgeet\", 'login': 'jasgeet@1', 'password': '1234' },\r\n  { 'id': 5, 'name': \"Geet\", 'login': 'jasgeet@2', 'password': '1234' },\r\n  { 'id': 6, 'name': \"Jaffie\", 'login': 'jasgeet@3', 'password': '1234' }\r\n  ];\r\n\r\n  serverdetails = [{ 'activity': true, 'id': 1, 'name': \"Abcd\" },\r\n  { 'activity': true, 'id': 2, 'name': \"def\" },\r\n  { 'activity': false, 'id': 3, 'name': \"ghi\" }]\r\n\r\n  ngOnInit() {\r\n    this.ideraService.getServerData().subscribe(res => {\r\n      console.log(res);\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  changeStatus(id) {\r\n    for (let i = 0; i < this.serverdetails.length; i++) {\r\n      if (this.serverdetails[i].id == id) {\r\n        if (this.serverdetails[i].activity)\r\n          this.serverdetails[i].activity = false;\r\n        else\r\n          this.serverdetails[i].activity = true;\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  startAll() {\r\n\r\n    for (let i = 0; i < this.serverdetails.length; i++) {\r\n\r\n      this.serverdetails[i].activity = true;\r\n\r\n    }\r\n  }\r\n\r\n\r\n  stopAll() {\r\n\r\n    for (let i = 0; i < this.serverdetails.length; i++) {\r\n\r\n      this.serverdetails[i].activity = false;\r\n    }\r\n  }\r\n\r\n  checkforDuplicateid(id) {\r\n    for (let i = 0; i < this.serverdetails.length; i++) {\r\n     if(this.serverdetails[i].id == id)\r\n      return 1;\r\n\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  connect() {\r\n    var obj={\r\n      \"id\":131,\r\n     \"loginId\":this.serverLogin,\r\n     \"serverName\":this.serverName,\r\n     \"password\":this.serverPassword,\r\n     \"activity\":true\r\n     }\r\n   this.ideraService.insertServerData(obj).subscribe(res=>{\r\n  console.log(res)\r\n});\r\n\r\n    let loginCheck = 0;\r\n    for (let i = 0; i < this.savedServerdetails.length; i++) {\r\n      if (this.serverLogin == this.savedServerdetails[i].login) {\r\n        loginCheck = 1;\r\n        if (this.serverPassword == this.savedServerdetails[i].password) {\r\n\r\n          let check = this.checkforDuplicateid(this.savedServerdetails[i].id);\r\n\r\n          console.log(check);\r\n          if (check == 0) {\r\n            this.serverdetails.push({\r\n              'id': this.savedServerdetails[i].id,\r\n              'activity': false,\r\n              'name': this.savedServerdetails[i].name\r\n            }\r\n            );\r\n            this.consoleError='';\r\n          }\r\n          else{\r\n            this.consoleError=\"Connection already added to the table\"\r\n          }\r\n\r\n        }\r\n        else {\r\n          this.consoleError = 'Password didnt matched';\r\n        }\r\n      }\r\n    }\r\n    if (loginCheck == 0) {\r\n      this.consoleError = 'No login found';\r\n    }\r\n   }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IderaServerService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getServerData(){\r\n    var data= this.http.get(\"/api/server/list\");\r\n    return data;\r\n  }\r\n  insertServerData(obj){\r\n    var data= this.http.post(\"/api/server/add\",obj);\r\n    return data;\r\n\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}